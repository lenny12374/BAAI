products = [
    {"name": "Laptop", "price": 1200, "category": "Electronics"},
    {"name": "Shirt", "price": 45, "category": "Clothing"},
    {"name": "Phone", "price": 800, "category": "Electronics"},
    {"name": "Shoes", "price": 120, "category": "Clothing"},
    {"name": "Tablet", "price": 350, "category": "Electronics"},
    {"name": "Jacket", "price": 95, "category": "Clothing"},
    {"name": "Book", "price": 25, "category": "Books"},
    {"name": "Headphones", "price": 150, "category": "Electronics"}
]

def calculate_discount_rate(product):
    category = product["category"]
    price = product["price"]
    
    if category == "Electronics":
        if price >= 1000:
            return 0.20
        elif price >= 500:
            return 0.15
        else:
            return 0.10
    elif category == "Clothing":
        if price >= 100:
            return 0.25
        else:
            return 0.15
    elif category == "Books":
        return 0.10
    else:
        return 0

def main():
    print("=== PRODUCT DISCOUNT CALCULATOR ===\n")
    
    total_products = len(products)
    total_original_price = 0
    total_discount_amount = 0
    total_final_price = 0
    total_discount_percentage_sum = 0
    
    category_counts = {}
    discounted_products = []  # will hold dicts with discount info for later use

    for p in products:
        discount_rate = calculate_discount_rate(p)
        discount_amount = p["price"] * discount_rate
        final_price = p["price"] - discount_amount
        
        # Accumulate totals
        total_original_price += p["price"]
        total_discount_amount += discount_amount
        total_final_price += final_price
        total_discount_percentage_sum += discount_rate
        
        # Count categories
        category_counts[p["category"]] = category_counts.get(p["category"], 0) + 1
        
        # Store product with discount info for later
        discounted_products.append({
            "name": p["name"],
            "category": p["category"],
            "original_price": p["price"],
            "discount_rate": discount_rate,
            "discount_amount": discount_amount,
            "final_price": final_price
        })

        # Prepare clearance tag for Level 3
        clearance_tag = " [Clearance]" if discount_rate >= 0.20 else ""

        # Print product details
        print(f"Product: {p['name']}{clearance_tag}")
        print(f"Category: {p['category']}")
        print(f"Original Price: ${p['price']:.2f}")
        print(f"Discount: {int(discount_rate * 100)}%")
        print(f"Final Price: ${final_price:.2f}\n")

    print("=== SUMMARY ===")
    print(f"Total Products: {total_products}")
    print(f"Total Original Price: ${total_original_price:.2f}")
    print(f"Total Discount: ${total_discount_amount:.2f}")
    print(f"Total Final Price: ${total_final_price:.2f}")
    
    # Level 1: Highest discount product
    highest_discount_product = max(discounted_products, key=lambda x: x["discount_amount"])
    avg_discount_percentage = (total_discount_percentage_sum / total_products) * 100
    
    print("\n--- Level 1 Enhancements ---")
    print(f"Product with Highest Discount: {highest_discount_product['name']} (${highest_discount_product['discount_amount']:.2f})")
    print(f"Average Discount Percentage: {avg_discount_percentage:.2f}%")
    
    # Level 2: Category counts and most expensive/cheapest product after discount
    print("\n--- Level 2 Enhancements ---")
    print("Product Counts by Category:")
    for cat, count in category_counts.items():
        print(f" - {cat}: {count}")
    
    most_expensive_product = max(discounted_products, key=lambda x: x["final_price"])
    cheapest_product = min(discounted_products, key=lambda x: x["final_price"])
    print(f"Most Expensive Product After Discount: {most_expensive_product['name']} (${most_expensive_product['final_price']:.2f})")
    print(f"Cheapest Product After Discount: {cheapest_product['name']} (${cheapest_product['final_price']:.2f})")
    
    # Level 3: Total savings for customer already equals total_discount_amount
    print("\n--- Level 3 Enhancements ---")
    print(f"Total Savings for Customer: ${total_discount_amount:.2f}")

if __name__ == "__main__":
    main()
